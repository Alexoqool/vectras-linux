name: Vectras VM Generate

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture arm64
        sudo apt-get update
        sudo apt-get install -y  libpulse-dev device-tree-compiler libpixman-1-dev zlib1g-dev libspice-server-dev libusbredirparser-dev libusbredirhost-dev libiscsi-dev python3 python3-venv python3-pip ninja-build make libsdl2-dev pkg-config-aarch64-linux-gnu libglib2.0-dev:arm64 git wget bash tar rsync patch dpkg gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross linux-headers-generic
        sudo ln -s /usr/lib/aarch64-linux-gnu/pkgconfig /usr/lib/pkgconfig/aarch64-linux-gnu
        # Configure PKG_CONFIG_PATH for the ARM64 architecture
        echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
        # Confirm pkg-config is finding arm64 libraries
        pkg-config-aarch64-linux-gnu --cflags glib-2.0
        # Install cross-compilers and related packages
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        # Install necessary development libraries
        sudo apt-get install -y libglib2.0-dev:arm64
        # Configure PKG_CONFIG_PATH for cross-compilation
        export PKG_CONFIG_PATH="/usr/lib/aarch64-linux-gnu/pkgconfig"
        # Required for pkg-config to find ARM64 libs
        export PKG_CONFIG=aarch64-linux-gnu-pkg-config
        
    - name: Install Python dependencies
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install sphinx==5.3.0 sphinx_rtd_theme meson

    - name: Download QEMU With 3dfx and Configure QEMU
      run: |
        mkdir ~/vectras-qemu && cd ~/vectras-qemu
        git clone https://github.com/kjliew/qemu-3dfx.git
        cd qemu-3dfx
        wget https://download.qemu.org/qemu-8.2.1.tar.xz
        tar xf qemu-8.2.1.tar.xz
        cd qemu-8.2.1
        rsync -r ../qemu-0/hw/3dfx ../qemu-1/hw/mesa ./hw/
        patch -p0 -i ../00-qemu82x-mesa-glide.patch
        bash ../scripts/sign_commit
        mkdir dist && cd dist
        mkdir vectras
        cd ..
        # The configure script should be in this directory. Check that it's there
        if [ -f configure ]; then
          chmod +x ./configure
          ./configure --cpu=aarch64 --target-list=aarch64-softmmu --enable-spice --disable-kvm --enable-tcg --enable-virtfs --enable-vnc --enable-libiscsi --audio-drv-list=pa
        else
          echo "Configure script not found"
          exit 1
        fi        
        make -j$(nproc)
        make install DESTDIR=dist/vectras

    - name: Setup debian and bios
      run: |
        cd ~/vectras-qemu/qemu-3dfx/qemu-8.2.1/dist
        git clone https://github.com/ahmedbarakat2007/vectras-bios.git
        cd vectras-bios
        make
        mv out/bios.bin ../vectras/usr/local/share/qemu/bios-vectras.bin
        cd ~/vectras-qemu/qemu-3dfx/qemu-8.2.1/dist/vectras
        mkdir DEBIAN
        echo -e "Package: vectras-vm\nVersion: 2.8.4\nArchitecture: arm64\nSection: utils\nPriority: optional\nMaintainer: vectrasvminc@gmail.com\nDescription: Vectras VM 3dfx build\n https://vectras.netlify.com" > DEBIAN/control
        cd ..
        dpkg-deb --build vectras
        mv vectras.deb vectras-vm-aarch64-2.8.4.deb

    - name: Upload vectras-qemu
      uses: actions/upload-artifact@v2
      with:
        name: vectras-qemu-aarch64-debian-package
        path: ~/vectras-qemu/qemu-3dfx/qemu-8.2.1/dist/vectras-vm-aarch64-2.8.4.deb
